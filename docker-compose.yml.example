# Note: data containers are used here mainly for developing with
# MacOS. Docker performance is too slow to run rails when the gems
# and/or database is stored on host-mounted volumes.
#
# Create data volumes like this:
# docker run -v /var/lib/postgresql/data --name poposals_data postgres:13.1 echo 'Postgres data'
# docker run -v /usr/local/rvm/gems -v /home/app/proposals/vendor/cache \
#    -v /home/app/proposas/node_nodules \\
#    --name rubygems6 "phusion/passenger-ruby27:1.0.12" echo 'Ruby gems'
#
# Be sure to update all of the usernames, passwords, and keys with secure ones!
# Generate secure strings using:
# < /dev/urandom LC_CTYPE=C tr -dc _A-Z-a-z-0-9 | head -c${1:-64};echo


version: '3.8'
services:
  db:
    image: postgres:13.1
    container_name: proposals_db
    volumes:
      - ./db/pg-init:/docker-entrypoint-initdb.d
    volumes:
      - poposals_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postges
      - POSTGRES_PASSWORD=
      - PSQL_TRUST_LOCALNET=true
      - DB_PORT=5433
      - DB_NAME=proposals_production,proposals_development,proposals_test
      - DB_USER=propuser
      - DB_PASS=

  web:
    build: .
    container_name: proposals
    command: /sbin/entrypoint.sh
    ports:
      - '3000:3000'
    volumes:
      - ./:/home/app/proposals
      - ./entrypoint.sh:/sbin/entrypoint.sh
      - rubygems6:/usr/local/rvm/gems
      - rubygems6:/home/app/proposals/vendor/cache
      - rubygems6:/home/app/proposals/node_modules
    links:
      - db
    environment:
      - DB_USER=propuser
      - DB_PASS=
      - RAILS_ENV=development
      - YARN_ENV=development
      - RAILS_SERVE_STATIC_FILES=true
      - SECRET_KEY_BASE=
      - SECRET_TOKEN=
      - DEVISE_SECRET_KEY=
      - DEVISE_JWT_SECRET_KEY=
      - DEVISE_PEPPER=
      - DEVISE_EMAIL=webmaster@example.com
      - APPLICATION_HOST=localhost
      - APPLICATION_PROTOCOL=http
      - EMAIL_SERVER=mail.example.com
      - EMAIL_PORT=587
      - EMAIL_STARTTLS=true

# adding labels allows pruning of unused system volumes with:
# docker volume prune --filter 'label!=proposals_volume'"
volumes:
  poposals_data:
    labels:
      proposals_volume: ""
  rubygems6:
    labels:
      proposals_volume: ""
